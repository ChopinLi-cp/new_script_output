{"id":"1616586386189-8a7473d6-dfe2-42ba-8414-962e6f690efe","testOrder":["com.github.kevinsawicki.http.HttpRequestTest.getNonGzippedWithUncompressEnabled","com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameter","com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyReader","com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams","com.github.kevinsawicki.http.HttpRequestTest.getUrlEmpty","com.github.kevinsawicki.http.HttpRequestTest.putEmpty","com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams","com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams","com.github.kevinsawicki.http.HttpRequestTest.postEmptyForm","com.github.kevinsawicki.http.HttpRequestTest.getAllHeaders","com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyByteArray","com.github.kevinsawicki.http.HttpRequestTest.appendMultipleMappedQueryParams","com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameters","com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSend","com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams","com.github.kevinsawicki.http.HttpRequestTest.chunkPost","com.github.kevinsawicki.http.HttpRequestTest.appendWithVarargsQueryParamsWithExistingParams","com.github.kevinsawicki.http.HttpRequestTest.getError","com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithPath","com.github.kevinsawicki.http.HttpRequestTest.acceptCharsetHeader","com.github.kevinsawicki.http.HttpRequestTest.getToOutputCode","com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyString","com.github.kevinsawicki.http.HttpRequestTest.getParameters","com.github.kevinsawicki.http.HttpRequestTest.headWithMappedQueryParams","com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingQueryStart","com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingParams","com.github.kevinsawicki.http.HttpRequestTest.bodyOfEmptyErrorResponse","com.github.kevinsawicki.http.HttpRequestTest.sendErrorCloseStream","com.github.kevinsawicki.http.HttpRequestTest.getNoContent","com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyFile","com.github.kevinsawicki.http.HttpRequestTest.postFormEntryWithNullValue","com.github.kevinsawicki.http.HttpRequestTest.malformedDateHeader","com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory","com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendByteArray","com.github.kevinsawicki.http.HttpRequestTest.appendListQueryParams","com.github.kevinsawicki.http.HttpRequestTest.postFormAsEntries","com.github.kevinsawicki.http.HttpRequestTest.getReader","com.github.kevinsawicki.http.HttpRequestTest.emptyHeaders","com.github.kevinsawicki.http.HttpRequestTest.ifNoneMatchHeader","com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams","com.github.kevinsawicki.http.HttpRequestTest.appendNullVaragsQueryParams","com.github.kevinsawicki.http.HttpRequestTest.streamOfEmptyOkResponse","com.github.kevinsawicki.http.HttpRequestTest.appendWithNullMappedQueryParamValues","com.github.kevinsawicki.http.HttpRequestTest.getReaderWithCharset","com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams"],"results":{"com.github.kevinsawicki.http.HttpRequestTest.postFormAsEntries":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postFormAsEntries","result":"PASS","time":0.00112599,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.headWithMappedQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.headWithMappedQueryParams","result":"PASS","time":0.001675761,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getParameters":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getParameters","result":"PASS","time":0.001241457,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postWithVaragsQueryParams","result":"PASS","time":0.004390954,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendWithVarargsQueryParamsWithExistingParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendWithVarargsQueryParamsWithExistingParams","result":"PASS","time":3.91419E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.streamOfEmptyOkResponse":{"name":"com.github.kevinsawicki.http.HttpRequestTest.streamOfEmptyOkResponse","result":"PASS","time":9.63273E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.deleteWithMappedQueryParams","result":"ERROR","time":0.001446765,"stackTrace":[{"declaringClass":"org.junit.Assert","methodName":"fail","fileName":"Assert.java","lineNumber":93},{"declaringClass":"org.junit.Assert","methodName":"failNotEquals","fileName":"Assert.java","lineNumber":647},{"declaringClass":"org.junit.Assert","methodName":"assertEquals","fileName":"Assert.java","lineNumber":128},{"declaringClass":"org.junit.Assert","methodName":"assertEquals","fileName":"Assert.java","lineNumber":147},{"declaringClass":"com.github.kevinsawicki.http.HttpRequestTest","methodName":"deleteWithMappedQueryParams","fileName":"HttpRequestTest.java","lineNumber":2723},{"declaringClass":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke0","fileName":"NativeMethodAccessorImpl.java","lineNumber":-2},{"declaringClass":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke","fileName":"NativeMethodAccessorImpl.java","lineNumber":62},{"declaringClass":"sun.reflect.DelegatingMethodAccessorImpl","methodName":"invoke","fileName":"DelegatingMethodAccessorImpl.java","lineNumber":43},{"declaringClass":"java.lang.reflect.Method","methodName":"invoke","fileName":"Method.java","lineNumber":498},{"declaringClass":"org.junit.runners.model.FrameworkMethod$1","methodName":"runReflectiveCall","fileName":"FrameworkMethod.java","lineNumber":45},{"declaringClass":"org.junit.internal.runners.model.ReflectiveCallable","methodName":"run","fileName":"ReflectiveCallable.java","lineNumber":15},{"declaringClass":"org.junit.runners.model.FrameworkMethod","methodName":"invokeExplosively","fileName":"FrameworkMethod.java","lineNumber":42},{"declaringClass":"org.junit.internal.runners.statements.InvokeMethod","methodName":"evaluate","fileName":"InvokeMethod.java","lineNumber":20},{"declaringClass":"org.junit.internal.runners.statements.RunBefores","methodName":"evaluate","fileName":"RunBefores.java","lineNumber":28},{"declaringClass":"org.junit.internal.runners.statements.RunAfters","methodName":"evaluate","fileName":"RunAfters.java","lineNumber":30},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestRunner","methodName":"runChild","fileName":"JUnitTestRunner.java","lineNumber":333},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestRunner","methodName":"run","fileName":"JUnitTestRunner.java","lineNumber":109},{"declaringClass":"org.junit.runner.JUnitCore","methodName":"run","fileName":"JUnitCore.java","lineNumber":157},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"execute","fileName":"JUnitTestExecutor.java","lineNumber":292},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"execute","fileName":"JUnitTestExecutor.java","lineNumber":328},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"executeWithJUnit4Runner","fileName":"JUnitTestExecutor.java","lineNumber":366},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"runOrder","fileName":"JUnitTestExecutor.java","lineNumber":47},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"$anonfun$run$1","fileName":"Executor.scala","lineNumber":30},{"declaringClass":"scala.runtime.java8.JFunction0$mcV$sp","methodName":"apply","fileName":"JFunction0$mcV$sp.java","lineNumber":12},{"declaringClass":"scala.util.Try$","methodName":"apply","fileName":"Try.scala","lineNumber":209},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"run","fileName":"Executor.scala","lineNumber":28},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"main","fileName":"Executor.scala","lineNumber":18},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor","methodName":"main","fileName":"Executor.scala","lineNumber":-1}]},"com.github.kevinsawicki.http.HttpRequestTest.chunkPost":{"name":"com.github.kevinsawicki.http.HttpRequestTest.chunkPost","result":"PASS","time":0.004230297,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getNoContent":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getNoContent","result":"PASS","time":0.001501509,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendWithNullMappedQueryParamValues":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendWithNullMappedQueryParamValues","result":"PASS","time":4.55674E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.emptyHeaders":{"name":"com.github.kevinsawicki.http.HttpRequestTest.emptyHeaders","result":"PASS","time":0.001015088,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams","result":"PASS","time":0.003834415,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingQueryStart":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingQueryStart","result":"PASS","time":3.58963E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getWithEscapedMappedQueryParams","result":"PASS","time":0.001346456,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getUrlEmpty":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getUrlEmpty","result":"PASS","time":0.001351679,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getReaderWithCharset":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getReaderWithCharset","result":"PASS","time":0.00107387,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameters":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameters","result":"PASS","time":0.00162641,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getNonGzippedWithUncompressEnabled":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getNonGzippedWithUncompressEnabled","result":"PASS","time":0.557907167,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.sendErrorCloseStream":{"name":"com.github.kevinsawicki.http.HttpRequestTest.sendErrorCloseStream","result":"PASS","time":7.91608E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.malformedDateHeader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.malformedDateHeader","result":"PASS","time":0.001116371,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getAllHeaders":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getAllHeaders","result":"PASS","time":0.001833231,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.acceptCharsetHeader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.acceptCharsetHeader","result":"PASS","time":0.001723532,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingParams","result":"PASS","time":3.59853E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyByteArray":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyByteArray","result":"PASS","time":0.002832474,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendListQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendListQueryParams","result":"PASS","time":4.07386E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getWithVarargsQueryParams","result":"ERROR","time":0.00296127,"stackTrace":[{"declaringClass":"org.junit.Assert","methodName":"fail","fileName":"Assert.java","lineNumber":93},{"declaringClass":"org.junit.Assert","methodName":"failNotEquals","fileName":"Assert.java","lineNumber":647},{"declaringClass":"org.junit.Assert","methodName":"assertEquals","fileName":"Assert.java","lineNumber":128},{"declaringClass":"org.junit.Assert","methodName":"assertEquals","fileName":"Assert.java","lineNumber":147},{"declaringClass":"com.github.kevinsawicki.http.HttpRequestTest","methodName":"getWithVarargsQueryParams","fileName":"HttpRequestTest.java","lineNumber":2639},{"declaringClass":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke0","fileName":"NativeMethodAccessorImpl.java","lineNumber":-2},{"declaringClass":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke","fileName":"NativeMethodAccessorImpl.java","lineNumber":62},{"declaringClass":"sun.reflect.DelegatingMethodAccessorImpl","methodName":"invoke","fileName":"DelegatingMethodAccessorImpl.java","lineNumber":43},{"declaringClass":"java.lang.reflect.Method","methodName":"invoke","fileName":"Method.java","lineNumber":498},{"declaringClass":"org.junit.runners.model.FrameworkMethod$1","methodName":"runReflectiveCall","fileName":"FrameworkMethod.java","lineNumber":45},{"declaringClass":"org.junit.internal.runners.model.ReflectiveCallable","methodName":"run","fileName":"ReflectiveCallable.java","lineNumber":15},{"declaringClass":"org.junit.runners.model.FrameworkMethod","methodName":"invokeExplosively","fileName":"FrameworkMethod.java","lineNumber":42},{"declaringClass":"org.junit.internal.runners.statements.InvokeMethod","methodName":"evaluate","fileName":"InvokeMethod.java","lineNumber":20},{"declaringClass":"org.junit.internal.runners.statements.RunBefores","methodName":"evaluate","fileName":"RunBefores.java","lineNumber":28},{"declaringClass":"org.junit.internal.runners.statements.RunAfters","methodName":"evaluate","fileName":"RunAfters.java","lineNumber":30},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestRunner","methodName":"runChild","fileName":"JUnitTestRunner.java","lineNumber":333},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestRunner","methodName":"run","fileName":"JUnitTestRunner.java","lineNumber":109},{"declaringClass":"org.junit.runner.JUnitCore","methodName":"run","fileName":"JUnitCore.java","lineNumber":157},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"execute","fileName":"JUnitTestExecutor.java","lineNumber":292},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"execute","fileName":"JUnitTestExecutor.java","lineNumber":328},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"executeWithJUnit4Runner","fileName":"JUnitTestExecutor.java","lineNumber":366},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"runOrder","fileName":"JUnitTestExecutor.java","lineNumber":47},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"$anonfun$run$1","fileName":"Executor.scala","lineNumber":30},{"declaringClass":"scala.runtime.java8.JFunction0$mcV$sp","methodName":"apply","fileName":"JFunction0$mcV$sp.java","lineNumber":12},{"declaringClass":"scala.util.Try$","methodName":"apply","fileName":"Try.scala","lineNumber":209},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"run","fileName":"Executor.scala","lineNumber":28},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"main","fileName":"Executor.scala","lineNumber":18},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor","methodName":"main","fileName":"Executor.scala","lineNumber":-1}]},"com.github.kevinsawicki.http.HttpRequestTest.appendNullVaragsQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendNullVaragsQueryParams","result":"PASS","time":4.72022E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyFile":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyFile","result":"PASS","time":0.007947392,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getToOutputCode":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getToOutputCode","result":"PASS","time":0.001202269,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postFormEntryWithNullValue":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postFormEntryWithNullValue","result":"PASS","time":0.001826025,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyReader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyReader","result":"PASS","time":0.019595088,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyString":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyString","result":"PASS","time":0.001397755,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.bodyOfEmptyErrorResponse":{"name":"com.github.kevinsawicki.http.HttpRequestTest.bodyOfEmptyErrorResponse","result":"PASS","time":0.001158523,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.ifNoneMatchHeader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.ifNoneMatchHeader","result":"PASS","time":0.001337644,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory":{"name":"com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory","result":"PASS","time":0.001207765,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameter":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameter","result":"PASS","time":0.001698876,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.putEmpty":{"name":"com.github.kevinsawicki.http.HttpRequestTest.putEmpty","result":"PASS","time":0.00127795,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getError":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getError","result":"PASS","time":0.0014612,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithPath":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithPath","result":"PASS","time":7.32121E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSend":{"name":"com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSend","result":"PASS","time":0.008519417,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postEmptyForm":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postEmptyForm","result":"PASS","time":0.001825973,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getReader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getReader","result":"PASS","time":0.00115026,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postWithMappedQueryParams","result":"PASS","time":0.001389004,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendMultipleMappedQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendMultipleMappedQueryParams","result":"PASS","time":4.1123E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendByteArray":{"name":"com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendByteArray","result":"PASS","time":0.0014014,"stackTrace":[]}},"diffs":{}}