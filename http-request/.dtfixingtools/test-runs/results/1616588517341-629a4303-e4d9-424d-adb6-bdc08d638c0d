{"id":"1616588517341-629a4303-e4d9-424d-adb6-bdc08d638c0d","testOrder":["com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory","com.github.kevinsawicki.http.HttpRequestTest.contentTypeHeader","com.github.kevinsawicki.http.HttpRequestTest.postForm","com.github.kevinsawicki.http.HttpRequestTest.receivePrintStream","com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams","com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameter","com.github.kevinsawicki.http.HttpRequestTest.getEmpty","com.github.kevinsawicki.http.HttpRequestTest.emptyHeaders","com.github.kevinsawicki.http.HttpRequestTest.acceptEncodingHeader","com.github.kevinsawicki.http.HttpRequestTest.getNonGzippedWithUncompressEnabled","com.github.kevinsawicki.http.HttpRequestTest.getSingleParameter","com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyFile","com.github.kevinsawicki.http.HttpRequestTest.missingIntHeader","com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithSpace","com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyReader","com.github.kevinsawicki.http.HttpRequestTest.appendWithNullMappedQueryParamValues","com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendReader","com.github.kevinsawicki.http.HttpRequestTest.getQuotedParameters","com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingQueryStart","com.github.kevinsawicki.http.HttpRequestTest.postEmptyForm","com.github.kevinsawicki.http.HttpRequestTest.traceUrlEmpty","com.github.kevinsawicki.http.HttpRequestTest.sendWithWriter","com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory","com.github.kevinsawicki.http.HttpRequestTest.basicAuthentication","com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParamsWithPath","com.github.kevinsawicki.http.HttpRequestTest.acceptJson","com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParmasWithNoPath","com.github.kevinsawicki.http.HttpRequestTest.appendWithNullVaragsQueryParamValues","com.github.kevinsawicki.http.HttpRequestTest.malformedDateHeader","com.github.kevinsawicki.http.HttpRequestTest.contentEncodingHeader","com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams","com.github.kevinsawicki.http.HttpRequestTest.putWithVarargsQueryParams","com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithPath","com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams"],"results":{"com.github.kevinsawicki.http.HttpRequestTest.acceptJson":{"name":"com.github.kevinsawicki.http.HttpRequestTest.acceptJson","result":"PASS","time":0.001114019,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.receivePrintStream":{"name":"com.github.kevinsawicki.http.HttpRequestTest.receivePrintStream","result":"PASS","time":0.012781339,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.missingIntHeader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.missingIntHeader","result":"PASS","time":0.001637997,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.basicAuthentication":{"name":"com.github.kevinsawicki.http.HttpRequestTest.basicAuthentication","result":"PASS","time":0.002850688,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendWithNullVaragsQueryParamValues":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendWithNullVaragsQueryParamValues","result":"PASS","time":3.13401E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendWithNullMappedQueryParamValues":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendWithNullMappedQueryParamValues","result":"PASS","time":0.001502318,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.emptyHeaders":{"name":"com.github.kevinsawicki.http.HttpRequestTest.emptyHeaders","result":"PASS","time":0.001278581,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getSingleParameter":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getSingleParameter","result":"PASS","time":0.001150036,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.sendWithWriter":{"name":"com.github.kevinsawicki.http.HttpRequestTest.sendWithWriter","result":"PASS","time":0.00133619,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendReader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.uploadProgressSendReader","result":"PASS","time":0.008687643,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParamsWithPath":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParamsWithPath","result":"PASS","time":3.60208E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.putWithEscapedVarargsQueryParams","result":"ERROR","time":0.004722172,"stackTrace":[{"declaringClass":"org.junit.Assert","methodName":"fail","fileName":"Assert.java","lineNumber":93},{"declaringClass":"org.junit.Assert","methodName":"failNotEquals","fileName":"Assert.java","lineNumber":647},{"declaringClass":"org.junit.Assert","methodName":"assertEquals","fileName":"Assert.java","lineNumber":128},{"declaringClass":"org.junit.Assert","methodName":"assertEquals","fileName":"Assert.java","lineNumber":147},{"declaringClass":"com.github.kevinsawicki.http.HttpRequestTest","methodName":"putWithEscapedVarargsQueryParams","fileName":"HttpRequestTest.java","lineNumber":2914},{"declaringClass":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke0","fileName":"NativeMethodAccessorImpl.java","lineNumber":-2},{"declaringClass":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke","fileName":"NativeMethodAccessorImpl.java","lineNumber":62},{"declaringClass":"sun.reflect.DelegatingMethodAccessorImpl","methodName":"invoke","fileName":"DelegatingMethodAccessorImpl.java","lineNumber":43},{"declaringClass":"java.lang.reflect.Method","methodName":"invoke","fileName":"Method.java","lineNumber":498},{"declaringClass":"org.junit.runners.model.FrameworkMethod$1","methodName":"runReflectiveCall","fileName":"FrameworkMethod.java","lineNumber":45},{"declaringClass":"org.junit.internal.runners.model.ReflectiveCallable","methodName":"run","fileName":"ReflectiveCallable.java","lineNumber":15},{"declaringClass":"org.junit.runners.model.FrameworkMethod","methodName":"invokeExplosively","fileName":"FrameworkMethod.java","lineNumber":42},{"declaringClass":"org.junit.internal.runners.statements.InvokeMethod","methodName":"evaluate","fileName":"InvokeMethod.java","lineNumber":20},{"declaringClass":"org.junit.internal.runners.statements.RunBefores","methodName":"evaluate","fileName":"RunBefores.java","lineNumber":28},{"declaringClass":"org.junit.internal.runners.statements.RunAfters","methodName":"evaluate","fileName":"RunAfters.java","lineNumber":30},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestRunner","methodName":"runChild","fileName":"JUnitTestRunner.java","lineNumber":333},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestRunner","methodName":"run","fileName":"JUnitTestRunner.java","lineNumber":109},{"declaringClass":"org.junit.runner.JUnitCore","methodName":"run","fileName":"JUnitCore.java","lineNumber":157},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"execute","fileName":"JUnitTestExecutor.java","lineNumber":292},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"execute","fileName":"JUnitTestExecutor.java","lineNumber":328},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"executeWithJUnit4Runner","fileName":"JUnitTestExecutor.java","lineNumber":366},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"runOrder","fileName":"JUnitTestExecutor.java","lineNumber":47},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"$anonfun$run$1","fileName":"Executor.scala","lineNumber":30},{"declaringClass":"scala.runtime.java8.JFunction0$mcV$sp","methodName":"apply","fileName":"JFunction0$mcV$sp.java","lineNumber":12},{"declaringClass":"scala.util.Try$","methodName":"apply","fileName":"Try.scala","lineNumber":209},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"run","fileName":"Executor.scala","lineNumber":28},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"main","fileName":"Executor.scala","lineNumber":18},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor","methodName":"main","fileName":"Executor.scala","lineNumber":-1}]},"com.github.kevinsawicki.http.HttpRequestTest.getEmpty":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getEmpty","result":"PASS","time":0.001482517,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingQueryStart":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithExistingQueryStart","result":"PASS","time":8.00159E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.contentEncodingHeader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.contentEncodingHeader","result":"PASS","time":0.001199924,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParmasWithNoPath":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendVarargsQueryParmasWithNoPath","result":"PASS","time":3.19969E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.acceptEncodingHeader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.acceptEncodingHeader","result":"PASS","time":0.00131653,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.putWithVarargsQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.putWithVarargsQueryParams","result":"PASS","time":9.80092E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getNonGzippedWithUncompressEnabled":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getNonGzippedWithUncompressEnabled","result":"PASS","time":0.001515685,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithSpace":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getUrlEncodedWithSpace","result":"FAILURE","time":0.002573975,"stackTrace":[{"declaringClass":"org.junit.Assert","methodName":"assertEquals","fileName":"Assert.java","lineNumber":125},{"declaringClass":"org.junit.Assert","methodName":"assertEquals","fileName":"Assert.java","lineNumber":147},{"declaringClass":"com.github.kevinsawicki.http.HttpRequestTest","methodName":"getUrlEncodedWithSpace","fileName":"HttpRequestTest.java","lineNumber":285},{"declaringClass":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke0","fileName":"NativeMethodAccessorImpl.java","lineNumber":-2},{"declaringClass":"sun.reflect.NativeMethodAccessorImpl","methodName":"invoke","fileName":"NativeMethodAccessorImpl.java","lineNumber":62},{"declaringClass":"sun.reflect.DelegatingMethodAccessorImpl","methodName":"invoke","fileName":"DelegatingMethodAccessorImpl.java","lineNumber":43},{"declaringClass":"java.lang.reflect.Method","methodName":"invoke","fileName":"Method.java","lineNumber":498},{"declaringClass":"org.junit.runners.model.FrameworkMethod$1","methodName":"runReflectiveCall","fileName":"FrameworkMethod.java","lineNumber":45},{"declaringClass":"org.junit.internal.runners.model.ReflectiveCallable","methodName":"run","fileName":"ReflectiveCallable.java","lineNumber":15},{"declaringClass":"org.junit.runners.model.FrameworkMethod","methodName":"invokeExplosively","fileName":"FrameworkMethod.java","lineNumber":42},{"declaringClass":"org.junit.internal.runners.statements.InvokeMethod","methodName":"evaluate","fileName":"InvokeMethod.java","lineNumber":20},{"declaringClass":"org.junit.internal.runners.statements.RunBefores","methodName":"evaluate","fileName":"RunBefores.java","lineNumber":28},{"declaringClass":"org.junit.internal.runners.statements.RunAfters","methodName":"evaluate","fileName":"RunAfters.java","lineNumber":30},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestRunner","methodName":"runChild","fileName":"JUnitTestRunner.java","lineNumber":333},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestRunner","methodName":"run","fileName":"JUnitTestRunner.java","lineNumber":109},{"declaringClass":"org.junit.runner.JUnitCore","methodName":"run","fileName":"JUnitCore.java","lineNumber":157},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"execute","fileName":"JUnitTestExecutor.java","lineNumber":292},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"execute","fileName":"JUnitTestExecutor.java","lineNumber":328},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"executeWithJUnit4Runner","fileName":"JUnitTestExecutor.java","lineNumber":366},{"declaringClass":"edu.illinois.cs.testrunner.execution.JUnitTestExecutor","methodName":"runOrder","fileName":"JUnitTestExecutor.java","lineNumber":47},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"$anonfun$run$1","fileName":"Executor.scala","lineNumber":30},{"declaringClass":"scala.runtime.java8.JFunction0$mcV$sp","methodName":"apply","fileName":"JFunction0$mcV$sp.java","lineNumber":12},{"declaringClass":"scala.util.Try$","methodName":"apply","fileName":"Try.scala","lineNumber":209},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"run","fileName":"Executor.scala","lineNumber":28},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor$","methodName":"main","fileName":"Executor.scala","lineNumber":18},{"declaringClass":"edu.illinois.cs.testrunner.execution.Executor","methodName":"main","fileName":"Executor.scala","lineNumber":-1}]},"com.github.kevinsawicki.http.HttpRequestTest.malformedDateHeader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.malformedDateHeader","result":"PASS","time":0.001052466,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.putWithMappedQueryParams","result":"PASS","time":0.389099863,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.contentTypeHeader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.contentTypeHeader","result":"PASS","time":0.012787985,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyFile":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyFile","result":"PASS","time":0.010551505,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getQuotedParameters":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getQuotedParameters","result":"PASS","time":0.001188793,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyReader":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postNonEmptyReader","result":"PASS","time":0.009439762,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postForm":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postForm","result":"PASS","time":0.003380378,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.traceUrlEmpty":{"name":"com.github.kevinsawicki.http.HttpRequestTest.traceUrlEmpty","result":"PASS","time":0.001294969,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameter":{"name":"com.github.kevinsawicki.http.HttpRequestTest.getEmptyParameter","result":"PASS","time":0.001420555,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory":{"name":"com.github.kevinsawicki.http.HttpRequestTest.customConnectionFactory","result":"PASS","time":0.551827569,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithPath":{"name":"com.github.kevinsawicki.http.HttpRequestTest.appendMappedQueryParamsWithPath","result":"PASS","time":3.14208E-4,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.postEmptyForm":{"name":"com.github.kevinsawicki.http.HttpRequestTest.postEmptyForm","result":"PASS","time":0.001189857,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams":{"name":"com.github.kevinsawicki.http.HttpRequestTest.headWithEscapedMappedQueryParams","result":"PASS","time":0.004873885,"stackTrace":[]},"com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory":{"name":"com.github.kevinsawicki.http.HttpRequestTest.nullConnectionFactory","result":"PASS","time":0.001516545,"stackTrace":[]}},"diffs":{}}